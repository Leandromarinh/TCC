# server {
#   listen 80;

#   location /api/ {
#     proxy_pass http://backend-service.default:8080/;
#   }
  
#   location / {
#     root /usr/share/nginx/html;
#     index index.html index.htm;
#     try_files $uri $uri/ /index.html =404;
#   }
  
#   include /etc/nginx/extra-conf.d/*.conf;
# }

# server {
#   listen 80;

#   location /api/ {
#     proxy_pass http://backend-service.default:8080/;
#   }

#   location / {
#     root /usr/share/nginx/html;
#     index index.html index.htm;

#     # Definir explicitamente os tipos MIME corretos para JavaScript, JSX, e outros arquivos estáticos
#     types {
#       application/javascript js jsx; # Inclua .jsx para arquivos de React
#       text/css               css;
#       image/svg+xml          svg;
#       application/pdf        pdf;
#       text/html              html;
#       image/png              png;
#       image/jpeg             jpg jpeg;
#       image/gif              gif;
#     }

#     # Tentando os arquivos reais primeiro, redirecionando para index.html se não for encontrado
#     try_files $uri $uri/ /index.html =404;
#   }

#   # Adiciona diretiva para arquivos estáticos (imagens, PDFs, etc.)
#   location ~* \.(?:ico|css|js|jsx|gif|jpe?g|png|svg|pdf)$ {
#     root /usr/share/nginx/html;
#     expires 1y;
#     access_log off;
#     add_header Cache-Control "public";
#   }

#   include /etc/nginx/extra-conf.d/*.conf;
# }

# server {
#     listen 80;

#     location /api/ {
#         proxy_pass http://backend-service.default:8080/;
#     }

#     location /static/ {
#         alias /usr/share/nginx/html/static/;
#         expires 1y;
#         access_log off;
#         add_header Cache-Control "public";
#     }

#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         try_files $uri $uri/ /index.html;
#     }

#     include /etc/nginx/extra-conf.d/*.conf;
# }

# Bloco principal de configuração do Nginx
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 80;

        location /static/ {
            alias /usr/share/nginx/html/static/;
            access_log off;
            expires 1y;
            add_header Cache-Control "public";
        }

        location /api/ {
            proxy_pass http://backend-service.default:8080/;
        }

        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
    }
}



